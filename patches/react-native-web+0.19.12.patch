diff --git a/node_modules/react-native-web/dist/cjs/exports/Image/index.js b/node_modules/react-native-web/dist/cjs/exports/Image/index.js
index 7e5f982..a34052e 100644
--- a/node_modules/react-native-web/dist/cjs/exports/Image/index.js
+++ b/node_modules/react-native-web/dist/cjs/exports/Image/index.js
@@ -144,6 +144,7 @@ var Image = /*#__PURE__*/React.forwardRef((props, ref) => {
   var _ariaLabel = props['aria-label'],
     accessibilityLabel = props.accessibilityLabel,
     blurRadius = props.blurRadius,
+    className = props.className,
     defaultSource = props.defaultSource,
     draggable = props.draggable,
     onError = props.onError,
@@ -265,6 +266,7 @@ var Image = /*#__PURE__*/React.forwardRef((props, ref) => {
   }, [uri, requestRef, updateState, onError, onLoad, onLoadEnd, onLoadStart]);
   return /*#__PURE__*/React.createElement(_View.default, (0, _extends2.default)({}, rest, {
     "aria-label": ariaLabel,
+    className: className,
     onLayout: handleLayout,
     pointerEvents: pointerEvents,
     ref: ref,
diff --git a/node_modules/react-native-web/dist/cjs/exports/ScrollView/ScrollViewBase.js b/node_modules/react-native-web/dist/cjs/exports/ScrollView/ScrollViewBase.js
index 9b67c41..ee34292 100644
--- a/node_modules/react-native-web/dist/cjs/exports/ScrollView/ScrollViewBase.js
+++ b/node_modules/react-native-web/dist/cjs/exports/ScrollView/ScrollViewBase.js
@@ -59,7 +59,8 @@ function shouldEmitScrollEvent(lastTick, eventThrottle) {
  * Encapsulates the Web-specific scroll throttling and disabling logic
  */
 var ScrollViewBase = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
-  var onScroll = props.onScroll,
+  var className = props.className,
+    onScroll = props.onScroll,
     onTouchMove = props.onTouchMove,
     onWheel = props.onWheel,
     _props$scrollEnabled = props.scrollEnabled,
@@ -125,6 +126,7 @@ var ScrollViewBase = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
   }
   var hideScrollbar = showsHorizontalScrollIndicator === false || showsVerticalScrollIndicator === false;
   return /*#__PURE__*/React.createElement(_View.default, (0, _extends2.default)({}, rest, {
+    className: className,
     onScroll: handleScroll,
     onTouchMove: createPreventableScrollHandler(onTouchMove),
     onWheel: createPreventableScrollHandler(onWheel),
diff --git a/node_modules/react-native-web/dist/cjs/exports/Text/index.js b/node_modules/react-native-web/dist/cjs/exports/Text/index.js
index 24a5ace..df8ebfb 100644
--- a/node_modules/react-native-web/dist/cjs/exports/Text/index.js
+++ b/node_modules/react-native-web/dist/cjs/exports/Text/index.js
@@ -29,6 +29,7 @@ var _excluded = ["hrefAttrs", "numberOfLines", "onClick", "onLayout", "onPress",
  * 
  */
 var forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {
+  className: true,
   href: true,
   lang: true,
   pointerEvents: true
@@ -108,6 +109,7 @@ var Text = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
   supportedProps.style = [numberOfLines != null && numberOfLines > 1 && {
     WebkitLineClamp: numberOfLines
   }, hasTextAncestor === true ? styles.textHasAncestor$raw : styles.text$raw, numberOfLines === 1 && styles.textOneLine, numberOfLines != null && numberOfLines > 1 && styles.textMultiLine, props.style, selectable === true && styles.selectable, selectable === false && styles.notSelectable, onPress && styles.pressable];
+  supportedProps.className = props.className;
   if (props.href != null) {
     component = 'a';
     if (hrefAttrs != null) {
diff --git a/node_modules/react-native-web/dist/cjs/exports/View/index.js b/node_modules/react-native-web/dist/cjs/exports/View/index.js
index e57ac2c..aab31dd 100644
--- a/node_modules/react-native-web/dist/cjs/exports/View/index.js
+++ b/node_modules/react-native-web/dist/cjs/exports/View/index.js
@@ -27,6 +27,7 @@ var _excluded = ["hrefAttrs", "onLayout", "onMoveShouldSetResponder", "onMoveSho
  * 
  */
 var forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {
+  className: true,
   href: true,
   lang: true,
   onScroll: true,
@@ -91,6 +92,7 @@ var View = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
   var supportedProps = pickProps(rest);
   supportedProps.dir = componentDirection;
   supportedProps.style = [styles.view$raw, hasTextAncestor && styles.inline, props.style];
+  supportedProps.className = props.className;
   if (props.href != null) {
     component = 'a';
     if (hrefAttrs != null) {
diff --git a/node_modules/react-native-web/dist/cjs/modules/createDOMProps/index.js b/node_modules/react-native-web/dist/cjs/modules/createDOMProps/index.js
index 1349f06..c991880 100644
--- a/node_modules/react-native-web/dist/cjs/modules/createDOMProps/index.js
+++ b/node_modules/react-native-web/dist/cjs/modules/createDOMProps/index.js
@@ -141,6 +141,7 @@ var createDOMProps = (elementType, props, options) => {
     accessibilityValueNow = _props.accessibilityValueNow,
     ariaValueText = _props['aria-valuetext'],
     accessibilityValueText = _props.accessibilityValueText,
+    _className = _props.className,
     dataSet = _props.dataSet,
     focusable = _props.focusable,
     id = _props.id,
@@ -545,6 +546,9 @@ var createDOMProps = (elementType, props, options) => {
   if (className) {
     domProps.className = className;
   }
+  if (_className) {
+    domProps.className += (" " + _className);
+  }
   if (inlineStyle) {
     domProps.style = inlineStyle;
   }
diff --git a/node_modules/react-native-web/dist/exports/Image/index.js b/node_modules/react-native-web/dist/exports/Image/index.js
index 9649d27..62722aa 100644
--- a/node_modules/react-native-web/dist/exports/Image/index.js
+++ b/node_modules/react-native-web/dist/exports/Image/index.js
@@ -139,6 +139,7 @@ var Image = /*#__PURE__*/React.forwardRef((props, ref) => {
   var _ariaLabel = props['aria-label'],
     accessibilityLabel = props.accessibilityLabel,
     blurRadius = props.blurRadius,
+    className = props.className,
     defaultSource = props.defaultSource,
     draggable = props.draggable,
     onError = props.onError,
@@ -260,6 +261,7 @@ var Image = /*#__PURE__*/React.forwardRef((props, ref) => {
   }, [uri, requestRef, updateState, onError, onLoad, onLoadEnd, onLoadStart]);
   return /*#__PURE__*/React.createElement(View, _extends({}, rest, {
     "aria-label": ariaLabel,
+    className: className,
     onLayout: handleLayout,
     pointerEvents: pointerEvents,
     ref: ref,
diff --git a/node_modules/react-native-web/dist/exports/ScrollView/ScrollViewBase.js b/node_modules/react-native-web/dist/exports/ScrollView/ScrollViewBase.js
index 677b4a3..aede27a 100644
--- a/node_modules/react-native-web/dist/exports/ScrollView/ScrollViewBase.js
+++ b/node_modules/react-native-web/dist/exports/ScrollView/ScrollViewBase.js
@@ -54,7 +54,8 @@ function shouldEmitScrollEvent(lastTick, eventThrottle) {
  * Encapsulates the Web-specific scroll throttling and disabling logic
  */
 var ScrollViewBase = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
-  var onScroll = props.onScroll,
+  var className = props.className,
+    onScroll = props.onScroll,
     onTouchMove = props.onTouchMove,
     onWheel = props.onWheel,
     _props$scrollEnabled = props.scrollEnabled,
@@ -120,6 +121,7 @@ var ScrollViewBase = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
   }
   var hideScrollbar = showsHorizontalScrollIndicator === false || showsVerticalScrollIndicator === false;
   return /*#__PURE__*/React.createElement(View, _extends({}, rest, {
+    className: className,
     onScroll: handleScroll,
     onTouchMove: createPreventableScrollHandler(onTouchMove),
     onWheel: createPreventableScrollHandler(onWheel),
diff --git a/node_modules/react-native-web/dist/exports/Text/index.js b/node_modules/react-native-web/dist/exports/Text/index.js
index 8c5f79b..b8c5e51 100644
--- a/node_modules/react-native-web/dist/exports/Text/index.js
+++ b/node_modules/react-native-web/dist/exports/Text/index.js
@@ -24,6 +24,7 @@ import TextAncestorContext from './TextAncestorContext';
 import { useLocaleContext, getLocaleDirection } from '../../modules/useLocale';
 import { warnOnce } from '../../modules/warnOnce';
 var forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {
+  className: true,
   href: true,
   lang: true,
   pointerEvents: true
@@ -103,6 +104,7 @@ var Text = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
   supportedProps.style = [numberOfLines != null && numberOfLines > 1 && {
     WebkitLineClamp: numberOfLines
   }, hasTextAncestor === true ? styles.textHasAncestor$raw : styles.text$raw, numberOfLines === 1 && styles.textOneLine, numberOfLines != null && numberOfLines > 1 && styles.textMultiLine, props.style, selectable === true && styles.selectable, selectable === false && styles.notSelectable, onPress && styles.pressable];
+  supportedProps.className = props.className;
   if (props.href != null) {
     component = 'a';
     if (hrefAttrs != null) {
diff --git a/node_modules/react-native-web/dist/exports/View/index.js b/node_modules/react-native-web/dist/exports/View/index.js
index c812d77..26d8db8 100644
--- a/node_modules/react-native-web/dist/exports/View/index.js
+++ b/node_modules/react-native-web/dist/exports/View/index.js
@@ -22,6 +22,7 @@ import StyleSheet from '../StyleSheet';
 import TextAncestorContext from '../Text/TextAncestorContext';
 import { useLocaleContext, getLocaleDirection } from '../../modules/useLocale';
 var forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {
+  className: true,
   href: true,
   lang: true,
   onScroll: true,
@@ -86,6 +87,7 @@ var View = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {
   var supportedProps = pickProps(rest);
   supportedProps.dir = componentDirection;
   supportedProps.style = [styles.view$raw, hasTextAncestor && styles.inline, props.style];
+  supportedProps.className = props.className;
   if (props.href != null) {
     component = 'a';
     if (hrefAttrs != null) {
diff --git a/node_modules/react-native-web/dist/modules/createDOMProps/index.js b/node_modules/react-native-web/dist/modules/createDOMProps/index.js
index 69a853b..4c80980 100644
--- a/node_modules/react-native-web/dist/modules/createDOMProps/index.js
+++ b/node_modules/react-native-web/dist/modules/createDOMProps/index.js
@@ -137,6 +137,7 @@ var createDOMProps = (elementType, props, options) => {
     accessibilityValueNow = _props.accessibilityValueNow,
     ariaValueText = _props['aria-valuetext'],
     accessibilityValueText = _props.accessibilityValueText,
+    _className = _props.className,
     dataSet = _props.dataSet,
     focusable = _props.focusable,
     id = _props.id,
@@ -541,6 +542,9 @@ var createDOMProps = (elementType, props, options) => {
   if (className) {
     domProps.className = className;
   }
+  if (_className) {
+    domProps.className += (" " + _className);
+  }
   if (inlineStyle) {
     domProps.style = inlineStyle;
   }
